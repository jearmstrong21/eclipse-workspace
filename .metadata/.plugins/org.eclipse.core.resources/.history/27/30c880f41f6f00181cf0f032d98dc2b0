package co.megadodo.shaderfun;

import java.nio.FloatBuffer;
import java.nio.IntBuffer;

import javax.media.opengl.GL3;

public class VertexBuffer {

	public VertexBuffer() {

	}

	public int vao;
	public int[] vbos;
	public int ebo;

	public void genBuffers(GL3 gl, FloatBuffer posData, FloatBuffer colData, IntBuffer triData) {
		IntBuffer vaoBuffer = IntBuffer.wrap(new int[] { vao });
		gl.glGenVertexArrays(1, vaoBuffer);
		vao = vaoBuffer.get(0);

		vbos = new int[2];
		IntBuffer vboBuffer = IntBuffer.wrap(vbos);
		gl.glGenBuffers(2, vboBuffer);
		vbos = vboBuffer.array();

		gl.glBindBuffer(GL3.GL_ARRAY_BUFFER, vbos[0]);
		gl.glBufferData(GL3.GL_ARRAY_BUFFER, posData.capacity(), posData, GL3.GL_STATIC_DRAW);

		gl.glBindBuffer(GL3.GL_ARRAY_BUFFER, vbos[1]);
		gl.glBufferData(GL3.GL_ARRAY_BUFFER, colData.capacity(), colData, GL3.GL_STATIC_DRAW);
		
		gl.glBindBuffer(GL3.GL_ELEMENT_ARRAY_BUFFER, ebo);
		gl.glBufferData(GL3.GL_ELEMENT_ARRAY_BUFFER, triData.capacity(), triData, GL3.GL_STATIC_DRAW);

		gl.glBindVertexArray(vao);
		
		gl.glEnableVertexAttribArray(0);
		gl.glBindBuffer(GL3.GL_ARRAY_BUFFER, vbos[0]);
		gl.glVertexAttribPointer(0, 3, GL3.GL_FLOAT, false, 0, null);

		gl.glEnableVertexAttribArray(1);
		gl.glBindBuffer(GL3.GL_ARRAY_BUFFER, vbos[1]);
		gl.glVertexAttribPointer(1, 3, GL3.GL_FLOAT, false, 0, null);
		
		gl.glBindVertexArray(0);
	}

	public void bindBuffers(GL3 gl) {
		gl.glBindVertexArray(vao);
		gl.glDrawArrays(GL3.GL_TRIANGLES, 0, 3);
		gl.glBindVertexArray(0);
	}

	public void deleteBuffers(GL3 gl) {
	}

}
