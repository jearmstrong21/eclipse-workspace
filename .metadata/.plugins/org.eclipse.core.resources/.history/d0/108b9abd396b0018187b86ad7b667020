package co.megadodo.lwjglswingshaderfun;

import static org.lwjgl.opengl.GL15.*;
import static org.lwjgl.opengl.GL20.*;
import static org.lwjgl.opengl.GL30.*;

import java.nio.*;
import java.util.ArrayList;


public class VertexBuffer {
	
	public int vbo;
	public int vao;
	public int ebo;
	
	public VertexBuffer() {
		
	}
	
	public void genBuffers(FloatBuffer posFB,FloatBuffer colFB) {
		vao=glGenVertexArrays();
		vbo=glGenBuffers();
		ebo=glGenBuffers();
		
		glBindVertexArray(vao);
		glBindBuffer(GL_ARRAY_BUFFER,vao);
		
		
		
		glBufferData(GL_ARRAY_BUFFER, allData, GL_STATIC_DRAW);
		glBindBuffer(GL_ELEMENT_ARRAY_BUFFER, ebo);
	    glBufferData(GL_ELEMENT_ARRAY_BUFFER, tris.size() * sizeof(unsigned int), &tris[0], GL_STATIC_DRAW);
	    
	    // set the vertex attribute pointers
	    // vertex Positions
	    glEnableVertexAttribArray(0);
	    glVertexAttribPointer(0, 3, GL_FLOAT, GL_FALSE, sizeof(Vertex), (void*)0);
	    // vertex normals
	    glEnableVertexAttribArray(1);
	    glVertexAttribPointer(1, 3, GL_FLOAT, GL_FALSE, sizeof(Vertex), (void*)offsetof(Vertex, col));
	    // vertex texture coords
	    glEnableVertexAttribArray(2);
	    glVertexAttribPointer(2, 2, GL_FLOAT, GL_FALSE, sizeof(Vertex), (void*)offsetof(Vertex, uv));
	    // vertex tangent
//	    glEnableVertexAttribArray(3);
//	    glVertexAttribPointer(3, 3, GL_FLOAT, GL_FALSE, sizeof(Vertex), (void*)offsetof(Vertex, Tangent));
	    // vertex bitangent
//	    glEnableVertexAttribArray(4);
//	    glVertexAttribPointer(4, 3, GL_FLOAT, GL_FALSE, sizeof(Vertex), (void*)offsetof(Vertex, Bitangent));
	    
	    glBindVertexArray(0);
	}

}
