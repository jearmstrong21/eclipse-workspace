package co.megadodo.shaderfun;

import java.nio.ByteBuffer;
import java.nio.IntBuffer;

import javax.media.opengl.GL3;

public class Shader {
	
	public static int makeShader(GL3 gl3, int type, String source) {
		int shaderID=gl3.glCreateShader(type);
		gl3.glShaderSource(shaderID, 1, new String[] {source}, null);
		gl3.glCompileShader(shaderID);
		IntBuffer buffer=IntBuffer.allocate(1);
		gl3.glGetShaderiv(shaderID, gl3.GL_COMPILE_STATUS, buffer);
		if(buffer.get(0)==gl3.GL_FALSE) {
			ByteBuffer bb=ByteBuffer.allocate(1000);
			String log=gl3.glGetShaderInfoLog(shaderID, gl3.GL_COMPILE_STATUS, null, bb);
		}
		
		return shaderID;
	}
	
	public int programID;
	public String vertCode;
	public String fragCode;
	public String vertFileName;
	public String fragFileName;
	
	public Shader() {
		
	}
	
	public void loadFiles() {
		vertCode=FileUtils.loadFile(vertFileName);
		fragCode=FileUtils.loadFile(fragFileName);
	}
	
	public void genProgram() {
		
	}

}
