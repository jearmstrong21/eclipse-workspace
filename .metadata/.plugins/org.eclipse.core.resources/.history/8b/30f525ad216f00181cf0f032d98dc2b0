package co.megadodo.shaderfun;

import java.nio.FloatBuffer;
import java.nio.IntBuffer;

import javax.media.opengl.GL3;
import javax.media.opengl.GLAutoDrawable;
import javax.media.opengl.GLCapabilities;
import javax.media.opengl.GLEventListener;
import javax.media.opengl.GLProfile;
import javax.media.opengl.awt.GLCanvas;
import javax.swing.JFrame;

public class ShaderFun {
	
	public static void main(String[]args) {
		GLProfile profile=GLProfile.get(GLProfile.GL3);
		GLCapabilities caps=new GLCapabilities(profile);
		JFrame frame=new JFrame();
		frame.setSize(500,500);
		frame.setTitle("ShaderFun");
		GLCanvas canvas=new GLCanvas(caps);
		canvas.addGLEventListener(new GLEventListener() {
			
			@Override
			public void reshape(GLAutoDrawable arg0, int arg1, int arg2, int arg3, int arg4) {
				// TODO Auto-generated method stub
				
			}
			
			@Override
			public void init(GLAutoDrawable arg0) {
				// TODO Auto-generated method stub
				
			}
			
			@Override
			public void dispose(GLAutoDrawable arg0) {
				// TODO Auto-generated method stub
				
			}
			
			@Override
			public void display(GLAutoDrawable autoDraw) {
				GL3 gl = (GL3)autoDraw.getGL();
				gl.glClearColor(1, 1, 1, 1);
				gl.glClear(GL3.GL_DEPTH_BUFFER_BIT|GL3.GL_COLOR_BUFFER_BIT);

				String renderer=gl.glGetString(GL3.GL_RENDERER);
				String vendor=gl.glGetString(GL3.GL_VENDOR);
				String version=gl.glGetString(GL3.GL_VERSION);
				String glslVersion=gl.glGetString(GL3.GL_SHADING_LANGUAGE_VERSION);

				IntBuffer bufferMajor=IntBuffer.allocate(1);
				IntBuffer bufferMinor=IntBuffer.allocate(1);
				gl.glGetIntegerv(GL3.GL_MAJOR_VERSION, bufferMajor);
				gl.glGetIntegerv(GL3.GL_MINOR_VERSION, bufferMinor);
				
				System.out.println("Renderer     : "+renderer);
				System.out.println("Vendor       : "+vendor);
				System.out.println("Version      : "+version);
				System.out.println("GLSL Version : "+glslVersion);
				System.out.println("Major version: "+bufferMajor.get(0));
				System.out.println("Minor version: "+bufferMinor.get(0));
				
				
				Shader shader=new Shader();
				shader.vertFileName="Shaders/shader.vert";
				shader.fragFileName="Shaders/shader.frag";
				shader.loadFiles();
				shader.genProgram(gl);
				FloatBuffer posData=FloatBuffer.wrap(new float[] {0,0,0, 1,0,0, 0,1,0});
				FloatBuffer colData=FloatBuffer.wrap(new float[] {1,0,0, 0,1,0, 0,0,1});
				IntBuffer triData=IntBuffer.wrap(new int[] {0,1,2});
				VertexBuffer vb=new VertexBuffer();
				vb.genBuffers(gl, posData, colData, triData);
				
				shader.useProgram(gl);
				vb.bindBuffers(gl);
				
				shader.deleteProgram(gl);
			}
		});
		frame.add(canvas);
		frame.setVisible(true);
	}

}
